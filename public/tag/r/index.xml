<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Anatoly Tsyplenkov</title>
    <link>/tag/r/</link>
      <atom:link href="/tag/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Anatoly Tsyplenkov 2020</copyright><lastBuildDate>Tue, 03 Mar 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu5bdec6d1c58bf0b3dec1c68914799cdd_114539_512x512_fill_lanczos_center_2.png</url>
      <title>R</title>
      <link>/tag/r/</link>
    </image>
    
    <item>
      <title>Tidy Tuesday NHL</title>
      <link>/post/tidy-tuesday-nhl/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/tidy-tuesday-nhl/</guid>
      <description>


&lt;p&gt;Okay, here it is. My first contribution to the my website. I’ll try to make a very quick and simple data exploration analysis for this weeks’ &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-03-03/readme.md&#34;&gt;Tidy Tuesday&lt;/a&gt;. There are three datasets available. I’m not sure that I’ll be able to analyze all of them… Let’s start from the first &lt;code&gt;top_250&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(atslib)
library(extrafont)
library(hrbrthemes)
theme_set(hrbrthemes::theme_ft_rc(base_family = &amp;quot;Ubuntu Condensed&amp;quot;))

top_250 &amp;lt;- readr::read_csv(&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-03/top_250.csv&amp;#39;)

top_250&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 251 x 9
##    raw_rank player  years total_goals url_number raw_link link   active yr_start
##       &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt;
##  1        1 Wayne ~ 1979~         894          1 /player~ https~ Retir~     1979
##  2        2 Gordie~ 1946~         801          2 /player~ https~ Retir~     1946
##  3        3 Jaromi~ 1990~         766          3 /player~ https~ Retir~     1990
##  4        4 Brett ~ 1986~         741          4 /player~ https~ Retir~     1986
##  5        5 Marcel~ 1971~         731          5 /player~ https~ Retir~     1971
##  6        6 Phil E~ 1963~         717          6 /player~ https~ Retir~     1963
##  7        7 Mike G~ 1979~         708          7 /player~ https~ Retir~     1979
##  8        8 Alex O~ 2005~         700          8 /player~ https~ Active     2005
##  9        9 Mark M~ 1979~         694          9 /player~ https~ Retir~     1979
## 10       10 Steve ~ 1983~         692         10 /player~ https~ Retir~     1983
## # ... with 241 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This dataset contains 250 NHL &amp;amp; WHA career leaders and records for goals. First, we’re going to tidy our dataset a bit. What is the most interesting here is total goals really depends on the career length?&lt;/p&gt;
&lt;p&gt;The information about years of career contains in &lt;code&gt;years&lt;/code&gt; variable. It has a structure of &lt;code&gt;YYYY-YY&lt;/code&gt;. First of all, let split it to &lt;code&gt;year_start&lt;/code&gt; and &lt;code&gt;year_end&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy_250 &amp;lt;- top_250 %&amp;gt;% 
  mutate(year_start = str_split(years, &amp;quot;-&amp;quot;, simplify = T)[,1],
         year_end = str_split(years, &amp;quot;-&amp;quot;, simplify = T)[,2]) %&amp;gt;% 
  mutate_at(vars(year_start), ~as.numeric(.)) %&amp;gt;% 
  mutate(century = ifelse(year_start &amp;lt; 2000, 19, 20),
         cc = str_split(year_start, 
                        as.character(century),
                        simplify = T)[,2],
         cc = as.numeric(cc)) %&amp;gt;%
  mutate(year_end = case_when(year_end &amp;gt; cc ~ paste0(19, year_end),
                              TRUE ~ paste0(20, year_end))) %&amp;gt;% 
  mutate_at(vars(year_start, year_end), ~as.numeric(.)) %&amp;gt;% 
  # We need to edit millenials ))
  mutate(year_end = ifelse(year_end &amp;lt; year_start,
                           year_end + 100,
                           year_end)) %&amp;gt;% 
  select(player, total_goals, year_start, year_end) 

tidy_250&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 251 x 4
##    player        total_goals year_start year_end
##    &amp;lt;chr&amp;gt;               &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
##  1 Wayne Gretzky         894       1979     1999
##  2 Gordie Howe           801       1946     1980
##  3 Jaromir Jagr          766       1990     2018
##  4 Brett Hull            741       1986     2006
##  5 Marcel Dionne         731       1971     1989
##  6 Phil Esposito         717       1963     1981
##  7 Mike Gartner          708       1979     1998
##  8 Alex Ovechkin         700       2005     2020
##  9 Mark Messier          694       1979     2004
## 10 Steve Yzerman         692       1983     2006
## # ... with 241 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Great! Now we have a very tidy dataframe. However, if we are going to plot career length of all 250 players, it can be a total mess on the plot. Let’s select only first 50 players using &lt;code&gt;dplyr::top_()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy_50 &amp;lt;- tidy_250 %&amp;gt;% 
  top_n(50, total_goals)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I prefer to use discrete color scale instead of continuous. So I’m going to convert &lt;code&gt;total_goals&lt;/code&gt; into factor. I really like to do it interactively with a new &lt;a href=&#34;https://juba.github.io/questionr/reference/icut.html&#34;&gt;questionr&lt;/a&gt; package! So easy!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Cutting tidy_50$total_goals into tidy_50$total_goals_rec
tidy_50$total_goals_rec &amp;lt;- cut(tidy_50$total_goals,
                               include.lowest=TRUE,  right=TRUE,
                               breaks = c(400, 500, 600, 700, 800, 900),
                               labels = c(&amp;quot;400-500&amp;quot;,
                                          &amp;quot;500-600&amp;quot;,
                                          &amp;quot;600-700&amp;quot;,
                                          &amp;quot;700-800&amp;quot;,
                                          &amp;quot;800-900&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Okay, so everything is ready for a plot! Please, notice, that I’ve already set the &lt;code&gt;ggplot&lt;/code&gt; theme in the first &lt;code&gt;r&lt;/code&gt; chunk via &lt;code&gt;theme_set&lt;/code&gt;. I prefer to use dark themes everywhere so for this post I’ll also use a dark one. Bob Rudis (&lt;a href=&#34;https://twitter.com/hrbrmstr&#34;&gt;hrbrmstr&lt;/a&gt;) has created a really nice one in his &lt;a href=&#34;https://github.com/hrbrmstr/hrbrthemes&#34;&gt;hrbrthemes&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggalt)
library(paletteer)

tidy_50 %&amp;gt;% 
  mutate(len = year_end - year_start) %&amp;gt;% 
  mutate(player = fct_reorder(player, year_start)) %&amp;gt;%
  ggplot(aes(x = year_start,
             xend = year_end,
             y = player,
             group = player)) + 
  ggalt::geom_dumbbell(aes(color = total_goals_rec),
                size_x = 1.3,
                size_xend = 1.3,
                size = 1) +
  labs(x = &amp;quot;Years active&amp;quot;, y = &amp;quot;&amp;quot;,
       title = &amp;quot;NHL Career Leaders and Records for Goals&amp;quot;,
       subtitle = &amp;quot;TOP 50&amp;quot;,
       caption = &amp;quot;Made by @atsyplen as a #TidyTuesday contribution&amp;quot;) +
  paletteer::scale_color_paletteer_d(name = &amp;quot;Total goals:&amp;quot;,
                                     &amp;quot;wesanderson::Zissou1&amp;quot;) +
  theme(panel.grid.major.y = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-03-tidy-tuesday-nhl_files/figure-html/plot-1.png&#34; width=&#34;576&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Let’s create a bit more meaningful plot. It’s very interesting how &lt;code&gt;total_goals&lt;/code&gt; are spread inside career lengths groups! For this one I’d prefer a boxlplot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy_250 %&amp;gt;% 
  mutate(len = year_end - year_start) %&amp;gt;% 
  mutate(len = cut(len,
                   include.lowest=TRUE,  right=TRUE,
                   breaks = c(5, 10, 15, 20, 25, 30, 35, 40),
                   labels = c(
                     &amp;quot;5-10&amp;quot;,
                     &amp;quot;10-15&amp;quot;,
                     &amp;quot;15-20&amp;quot;,
                     &amp;quot;20-25&amp;quot;,
                     &amp;quot;25-30&amp;quot;,
                     &amp;quot;30-35&amp;quot;,
                     &amp;quot;35-40&amp;quot;
                   ))) %&amp;gt;% 
  group_by(len) %&amp;gt;% 
  mutate(outlier.high = total_goals &amp;gt; quantile(total_goals, .75, na.rm = T) + 1.50*IQR(total_goals, na.rm = T),
         outlier.low = total_goals &amp;lt; quantile(total_goals, .25, na.rm = T) - 1.50*IQR(total_goals, na.rm = T),
         outlier.color = case_when(outlier.high ~ &amp;quot;red&amp;quot;,
                                   outlier.low ~ &amp;quot;steelblue&amp;quot;,
                                   outlier.low == F | outlier.high == F ~ &amp;quot;black&amp;quot;)) %&amp;gt;%
  ggplot(aes(x = len, y = total_goals)) +
  stat_boxplot(geom =&amp;#39;errorbar&amp;#39;,
               width = .25,
               color = &amp;quot;white&amp;quot;) +
  geom_boxplot(outlier.shape = NA,
               color = &amp;quot;white&amp;quot;,
               fill = &amp;quot;white&amp;quot;,
               alpha = .3) +
  geom_jitter(aes(color = outlier.color),
              width = .1,
              alpha = .6,
              show.legend = F) +
  scale_y_continuous(breaks = seq(100, 900, 100),
                     labels = seq(100, 900, 100)) +
  ggrepel::geom_text_repel(data = . %&amp;gt;% group_by(len) %&amp;gt;% 
                             filter(total_goals == max(total_goals)),
                           aes(label = player), segment.colour = &amp;quot;white&amp;quot;,
                           color = &amp;quot;white&amp;quot;, family = &amp;quot;Ubuntu Condensed&amp;quot;) +
  ggsci::scale_color_lancet() +
  labs(y = &amp;quot;Total goals scored in career&amp;quot;,
       x = &amp;quot;Career length, years&amp;quot;,
       title = &amp;quot;NHL Career Leaders and Records for Goals&amp;quot;,
       subtitle = &amp;quot;TOP 250&amp;quot;,
       caption = &amp;quot;Made by @atsyplen as a #TidyTuesday contribution&amp;quot;) +
  theme(panel.grid.major.x = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-03-tidy-tuesday-nhl_files/figure-html/boxplot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
